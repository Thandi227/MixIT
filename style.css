 *{
  padding: 0;
  margin: 0;
  list-style:none;
}

body{
  background-color: salmon;
  color: white;
  font-size:30px;  
}

p{
  font-size: 50px;
}
.gameName{
    background-color: salmon;
    color: white; 
    text-align: center;
    font-size:150px; 
    padding: 10%;
    text-transform: uppercase; 
    letter-spacing: 10px;
    
}

/* TIMER */


.timer{
  margin-left: 85px;
  margin-right: 85px;
  padding: 3%;
  text-align: center;
  background-color: #f0bf0f;
  font-size: 60px;
  border-radius: 3px;
  

}

.minutes{
  padding: 15px;
  border-radius: 3px;
  background: rgb(57, 182, 159);
  display: inline-block;
}

.seconds{
  padding: 15px;
  border-radius: 3px;
  background: rgb(57, 182, 159);
  display: inline-block;
}


/* Style for Instructions */

.instructions{
  text-align: center;
  padding:5%;
  background-color: salmon;
  color: white;
}
.instuctionTitle{
  font-size: 50px;
  font-family: sans-serif; 
}

.instuctionDescrip{
  font-size: 50px;
  padding:2%;
}


/* Style for Buttons| Active makes it clickable */
.roundEasy {
  width: 193px;
  height: 75px;
  overflow: visible;
  background-color: #60A758;
  border-radius: 127px;
  border: 1px solid #29d42e;
  box-shadow: 0px 8px 5px 0px rgba(0, 0, 0, 0.71);
  
  
}
.roundEasy:hover{
background-color: #29d42e;
}

.roundEasy:active{
background-color: #3e8e41;
box-shadow: 0 5px #632;
transform: translateY(4px);
}

.roundMedium {
  width: 193px;
  height: 75px;
  overflow: visible;
  background-color: #f0bf0f;
  border-radius: 127px;
  border: 1px solid #rgb(255, 230, 0);
  box-shadow: 0px 8px 5px 0px rgba(0, 0, 0, 0.71);
}

.roundMedium:hover{
background-color: rgb(255, 230, 0);
}

.roundMedium:active{
background-color: goldenrod;
box-shadow: 0 5px #632;
transform: translateY(4px);
}

.roundHard {
  width: 193px;
  height: 75px;
  overflow: visible;
  background-color: #ed4a4a;
  border-radius: 127px;
  border: 1px solid red;
  box-shadow: 0px 8px 5px 0px rgba(0, 0, 0, 0.71);
}

.roundHard:hover{
background-color: red;
}

.roundHard:active{
background-color: red;
box-shadow: 0 5px #632;
transform: translateY(4px);
}

.start{
  vertical-align: middle;
  width: 469px;
  height: 120px;
  background-color: #0093F5;
  border-radius: 127px;
  box-shadow: 0px 8px 5px 0px rgba(0, 0, 0, 0.71);
  border: 1px solid  rgb(0, 217, 255);
  
}

.start:hover{
background-color: rgb(0, 217, 255);
}

.start:active{
background-color: royalblue;
box-shadow: 0 5px #632;
transform: translateY(4px);
} */


/* Style for Cards | So for the following CSS Code I am creating the parameters for which my cards will live in by calling on the containers that I made earlier - "cpu" and "user.  */
.cpu {
  width: 640px;
  height: 640px;
  display: flex;
  flex-wrap: wrap;
  perspective: 1000px;
  

}

.user {
  width: 640px;
  height: 640px;
  flex-wrap: wrap;
  position: relative;
  perspective: 1000px;

}

/* Container that Houses the Game, by giving it thre columns I was able to have the user postioned directly across from the cpu. The first row is 150px high and the third row is also 150px high so now they even out. */

.container{
  float: center;
  width: 640px;
  height: 640px;
  margin: auto;
  padding:2%;
  justify-content: center;
  display: flex;
  


	
}

/* These containers allow us to create the grid effect */
.cpuDeck{
  display: grid;
  grid: auto/ auto auto auto;
  margin-right: 350px;
}
.userDeck{
  display: grid;
  grid: auto / auto auto auto;
}


/* Here I am definig the parameters for my cards, below is what I want each of them to do. The transition refers to the amount of seconds it will take for our card to transform so if we say that our card will transform in .60 seconds we will need to click and hold for that time period. The transform refers to. The transform-style refers to.  */
.card {
  width: 325px;
  height: 325px;
  margin: 5px;
  position: relative;
  box-shadow: 1px 1px 1px rgba(0,0,0,.3);
  transform-style: preserve-3d;
  transform:scale(0.95);
  transition:transform .4s;
}

/* The animation of flip and active to ensure that the functionality is there */ 
.card:active {
  transform: rotateY(180deg);
  
}

/* The ability to position one image behind (or ontop of) the other comes from the function the "position: absolute" and setting both the "front" card and "back" card to have the same parameters. The background that exists within the instructions for ".front,.back" will be place in between of the two images we have (an easy way to see your other image is to set the background to transparent). */

.front,
.back {
  width: 100%;
  height: 100%;
  padding: 20px;
  position: absolute;
  border-radius: 5px;
  background: orange;
  backface-visibility: hidden;
}

/* This allows us to see the an image after we hover or click. We can always change front or back depending on what side of the card we want to see.  */
.back{
  transform: rotateY(180deg);
}














 



